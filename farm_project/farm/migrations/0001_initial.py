# Generated by Django 4.2.1 on 2023-10-18 11:44

import builtins
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "customer_id",
                    models.AutoField(
                        db_column="customer_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                (
                    "active_organization_id",
                    models.IntegerField(db_column="active_organization_id", null=True),
                ),
                (
                    "email",
                    models.TextField(
                        db_column="email", db_index=True, max_length=50, null=True
                    ),
                ),
                (
                    "email_confirmed_utc_date_time",
                    models.DateTimeField(
                        db_column="email_confirmed_utc_date_time", null=True
                    ),
                ),
                ("first_name", models.TextField(db_column="first_name", null=True)),
                (
                    "forgot_password_key_expiration_utc_date_time",
                    models.DateTimeField(
                        db_column="forgot_password_key_expiration_utc_date_time",
                        null=True,
                    ),
                ),
                (
                    "forgot_password_key_value",
                    models.TextField(db_column="forgot_password_key_value", null=True),
                ),
                (
                    "fs_user_code_value",
                    models.UUIDField(
                        db_column="fs_user_code_value", db_index=True, null=True
                    ),
                ),
                ("is_active", models.BooleanField(db_column="is_active", null=True)),
                (
                    "is_email_allowed",
                    models.BooleanField(db_column="is_email_allowed", null=True),
                ),
                (
                    "is_email_confirmed",
                    models.BooleanField(db_column="is_email_confirmed", null=True),
                ),
                (
                    "is_email_marketing_allowed",
                    models.BooleanField(
                        db_column="is_email_marketing_allowed", null=True
                    ),
                ),
                ("is_locked", models.BooleanField(db_column="is_locked", null=True)),
                (
                    "is_multiple_organizations_allowed",
                    models.BooleanField(
                        db_column="is_multiple_organizations_allowed", null=True
                    ),
                ),
                (
                    "is_verbose_logging_forced",
                    models.BooleanField(
                        db_column="is_verbose_logging_forced", null=True
                    ),
                ),
                (
                    "last_login_utc_date_time",
                    models.DateTimeField(
                        db_column="last_login_utc_date_time", null=True
                    ),
                ),
                ("last_name", models.TextField(db_column="last_name", null=True)),
                ("password", models.TextField(db_column="password", null=True)),
                (
                    "phone",
                    models.TextField(db_column="phone", max_length=50, null=True),
                ),
                ("province", models.TextField(db_column="province", null=True)),
                (
                    "registration_utc_date_time",
                    models.DateTimeField(
                        db_column="registration_utc_date_time", null=True
                    ),
                ),
                (
                    "utc_offset_in_minutes",
                    models.IntegerField(db_column="utc_offset_in_minutes", null=True),
                ),
                ("zip", models.TextField(db_column="zip", null=True)),
            ],
            options={
                "db_table": "farm_customer",
            },
        ),
        migrations.CreateModel(
            name="Flavor",
            fields=[
                (
                    "flavor_id",
                    models.AutoField(
                        db_column="flavor_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                ("description", models.TextField(db_column="description", null=True)),
                (
                    "display_order",
                    models.IntegerField(db_column="display_order", null=True),
                ),
                ("is_active", models.BooleanField(db_column="is_active", null=True)),
                (
                    "lookup_enum_name",
                    models.TextField(db_column="lookup_enum_name", null=True),
                ),
                ("name", models.TextField(db_column="name", null=True)),
            ],
            options={
                "db_table": "farm_flavor",
            },
        ),
        migrations.CreateModel(
            name="Land",
            fields=[
                (
                    "land_id",
                    models.AutoField(
                        db_column="land_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                ("description", models.TextField(db_column="description", null=True)),
                (
                    "display_order",
                    models.IntegerField(db_column="display_order", null=True),
                ),
                ("is_active", models.BooleanField(db_column="is_active", null=True)),
                (
                    "lookup_enum_name",
                    models.TextField(db_column="lookup_enum_name", null=True),
                ),
                ("name", models.TextField(db_column="name", null=True)),
            ],
            options={
                "db_table": "farm_land",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "organization_id",
                    models.AutoField(
                        db_column="organization_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                ("name", models.TextField(db_column="name", null=True)),
            ],
            options={
                "db_table": "farm_organization",
            },
        ),
        migrations.CreateModel(
            name="Pac",
            fields=[
                ("pac_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "code",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("insert_user_id", models.UUIDField(null=True)),
                ("last_update_user_id", models.UUIDField(null=True)),
                ("last_change_code", models.UUIDField(default=uuid.uuid4)),
                ("description", models.TextField(null=True)),
                ("display_order", models.IntegerField(null=True)),
                ("is_active", models.BooleanField(null=True)),
                ("lookup_enum_name", models.TextField(null=True)),
                ("name", models.TextField(null=True)),
            ],
            options={
                "db_table": "farm_pac",
            },
        ),
        migrations.CreateModel(
            name="TriStateFilter",
            fields=[
                (
                    "tri_state_filter_id",
                    models.AutoField(
                        db_column="tri_state_filter_id",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                ("description", models.TextField(db_column="description", null=True)),
                (
                    "display_order",
                    models.IntegerField(db_column="display_order", null=True),
                ),
                ("is_active", models.BooleanField(db_column="is_active", null=True)),
                (
                    "lookup_enum_name",
                    models.TextField(db_column="lookup_enum_name", null=True),
                ),
                ("name", models.TextField(db_column="name", null=True)),
                (
                    "state_int_value",
                    models.IntegerField(db_column="state_int_value", null=True),
                ),
                (
                    "pac",
                    models.ForeignKey(
                        blank=True,
                        db_column="pac_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tri_state_filter_list",
                        to="farm.pac",
                    ),
                ),
            ],
            options={
                "db_table": "farm_tri_state_filter",
            },
        ),
        migrations.CreateModel(
            name="Tac",
            fields=[
                (
                    "tac_id",
                    models.AutoField(
                        db_column="tac_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                ("description", models.TextField(db_column="description", null=True)),
                (
                    "display_order",
                    models.IntegerField(db_column="display_order", null=True),
                ),
                ("is_active", models.BooleanField(db_column="is_active", null=True)),
                (
                    "lookup_enum_name",
                    models.TextField(db_column="lookup_enum_name", null=True),
                ),
                ("name", models.TextField(db_column="name", null=True)),
                (
                    "pac",
                    models.ForeignKey(
                        blank=True,
                        db_column="pac_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tac_list",
                        to="farm.pac",
                    ),
                ),
            ],
            options={
                "db_table": "farm_tac",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "role_id",
                    models.AutoField(
                        db_column="role_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                ("description", models.TextField(db_column="description", null=True)),
                (
                    "display_order",
                    models.IntegerField(db_column="display_order", null=True),
                ),
                ("is_active", models.BooleanField(db_column="is_active", null=True)),
                (
                    "lookup_enum_name",
                    models.TextField(db_column="lookup_enum_name", null=True),
                ),
                ("name", models.TextField(db_column="name", null=True)),
                (
                    "pac",
                    models.ForeignKey(
                        blank=True,
                        db_column="pac_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="role_list",
                        to="farm.pac",
                    ),
                ),
            ],
            options={
                "db_table": "farm_role",
            },
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                (
                    "plant_id",
                    models.AutoField(
                        db_column="plant_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                (
                    "is_delete_allowed",
                    models.BooleanField(db_column="is_delete_allowed", null=True),
                ),
                (
                    "is_edit_allowed",
                    models.BooleanField(db_column="is_edit_allowed", null=True),
                ),
                ("other_flavor", models.TextField(db_column="other_flavor", null=True)),
                (
                    "some_big_int_val",
                    models.BigIntegerField(db_column="some_big_int_val", null=True),
                ),
                (
                    "some_bit_val",
                    models.BooleanField(db_column="some_bit_val", null=True),
                ),
                (
                    "some_date_val",
                    models.DateField(db_column="some_date_val", null=True),
                ),
                (
                    "some_decimal_val",
                    models.DecimalField(
                        db_column="some_decimal_val",
                        decimal_places=6,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "some_email_address",
                    models.TextField(
                        db_column="some_email_address", max_length=50, null=True
                    ),
                ),
                (
                    "some_float_val",
                    models.FloatField(db_column="some_float_val", null=True),
                ),
                (
                    "some_int_val",
                    models.IntegerField(db_column="some_int_val", null=True),
                ),
                (
                    "some_money_val",
                    models.DecimalField(
                        db_column="some_money_val",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "some_n_var_char_val",
                    models.TextField(db_column="some_n_var_char_val", null=True),
                ),
                (
                    "some_phone_number",
                    models.TextField(
                        db_column="some_phone_number", max_length=50, null=True
                    ),
                ),
                (
                    "some_text_val",
                    models.TextField(
                        db_column="some_text_val", max_length=builtins.max, null=True
                    ),
                ),
                (
                    "some_uniqueidentifier_val",
                    models.UUIDField(db_column="some_uniqueidentifier_val", null=True),
                ),
                (
                    "some_utc_date_time_val",
                    models.DateTimeField(db_column="some_utc_date_time_val", null=True),
                ),
                (
                    "some_var_char_val",
                    models.TextField(
                        db_column="some_var_char_val", max_length=50, null=True
                    ),
                ),
                (
                    "flvr_fk",
                    models.ForeignKey(
                        blank=True,
                        db_column="flvr_fk_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plant_list",
                        to="farm.flavor",
                    ),
                ),
                (
                    "land",
                    models.ForeignKey(
                        blank=True,
                        db_column="land_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plant_list",
                        to="farm.land",
                    ),
                ),
            ],
            options={
                "db_table": "farm_plant",
            },
        ),
        migrations.CreateModel(
            name="OrgCustomer",
            fields=[
                (
                    "org_customer_id",
                    models.AutoField(
                        db_column="org_customer_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                (
                    "email",
                    models.TextField(db_column="email", max_length=50, null=True),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        db_column="customer_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="org_customer_list",
                        to="farm.customer",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_column="organization_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="org_customer_list",
                        to="farm.organization",
                    ),
                ),
            ],
            options={
                "db_table": "farm_org_customer",
            },
        ),
        migrations.CreateModel(
            name="OrgApiKey",
            fields=[
                (
                    "org_api_key_id",
                    models.AutoField(
                        db_column="org_api_key_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                (
                    "api_key_value",
                    models.TextField(db_column="api_key_value", null=True),
                ),
                ("created_by", models.TextField(db_column="created_by", null=True)),
                (
                    "created_utc_date_time",
                    models.DateTimeField(db_column="created_utc_date_time", null=True),
                ),
                (
                    "expiration_utc_date_time",
                    models.DateTimeField(
                        db_column="expiration_utc_date_time", null=True
                    ),
                ),
                ("is_active", models.BooleanField(db_column="is_active", null=True)),
                (
                    "is_temp_user_key",
                    models.BooleanField(db_column="is_temp_user_key", null=True),
                ),
                ("name", models.TextField(db_column="name", null=True)),
                (
                    "org_customer",
                    models.ForeignKey(
                        blank=True,
                        db_column="org_customer_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="org_api_key_list",
                        to="farm.orgcustomer",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_column="organization_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="org_api_key_list",
                        to="farm.organization",
                    ),
                ),
            ],
            options={
                "db_table": "farm_org_api_key",
            },
        ),
        migrations.AddField(
            model_name="organization",
            name="tac",
            field=models.ForeignKey(
                blank=True,
                db_column="tac_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="organization_list",
                to="farm.tac",
            ),
        ),
        migrations.AddField(
            model_name="land",
            name="pac",
            field=models.ForeignKey(
                blank=True,
                db_column="pac_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="land_list",
                to="farm.pac",
            ),
        ),
        migrations.AddField(
            model_name="flavor",
            name="pac",
            field=models.ForeignKey(
                blank=True,
                db_column="pac_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="flavor_list",
                to="farm.pac",
            ),
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "error_log_id",
                    models.AutoField(
                        db_column="error_log_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                ("browser_code", models.UUIDField(db_column="browser_code", null=True)),
                ("context_code", models.UUIDField(db_column="context_code", null=True)),
                (
                    "created_utc_date_time",
                    models.DateTimeField(db_column="created_utc_date_time", null=True),
                ),
                ("description", models.TextField(db_column="description", null=True)),
                (
                    "is_client_side_error",
                    models.BooleanField(db_column="is_client_side_error", null=True),
                ),
                (
                    "is_resolved",
                    models.BooleanField(db_column="is_resolved", null=True),
                ),
                ("url", models.TextField(db_column="url", null=True)),
                (
                    "pac",
                    models.ForeignKey(
                        blank=True,
                        db_column="pac_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="error_log_list",
                        to="farm.pac",
                    ),
                ),
            ],
            options={
                "db_table": "farm_error_log",
            },
        ),
        migrations.CreateModel(
            name="DateGreaterThanFilter",
            fields=[
                (
                    "date_greater_than_filter_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "code",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("insert_user_id", models.UUIDField(null=True)),
                ("last_update_user_id", models.UUIDField(null=True)),
                ("last_change_code", models.UUIDField(default=uuid.uuid4)),
                ("day_count", models.IntegerField(null=True)),
                ("description", models.TextField(null=True)),
                ("display_order", models.IntegerField(null=True)),
                ("is_active", models.BooleanField(null=True)),
                ("lookup_enum_name", models.TextField(null=True)),
                ("name", models.TextField(null=True)),
                (
                    "pac",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="date_greater_than_filter_list",
                        to="farm.pac",
                    ),
                ),
            ],
            options={
                "db_table": "farm_date_greater_than_filter",
            },
        ),
        migrations.CreateModel(
            name="CustomerRole",
            fields=[
                (
                    "customer_role_id",
                    models.AutoField(
                        db_column="customer_role_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.UUIDField(
                        db_column="code", db_index=True, default=uuid.uuid4, unique=True
                    ),
                ),
                (
                    "insert_utc_date_time",
                    models.DateTimeField(
                        db_column="insert_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "last_update_utc_date_time",
                    models.DateTimeField(
                        db_column="last_update_utc_date_time",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "insert_user_id",
                    models.UUIDField(db_column="insert_user_id", null=True),
                ),
                (
                    "last_update_user_id",
                    models.UUIDField(db_column="last_update_user_id", null=True),
                ),
                (
                    "last_change_code",
                    models.UUIDField(db_column="last_change_code", default=uuid.uuid4),
                ),
                (
                    "is_placeholder",
                    models.BooleanField(db_column="is_placeholder", null=True),
                ),
                (
                    "placeholder",
                    models.BooleanField(db_column="placeholder", null=True),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        db_column="customer_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customer_role_list",
                        to="farm.customer",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        db_column="role_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customer_role_list",
                        to="farm.role",
                    ),
                ),
            ],
            options={
                "db_table": "farm_customer_role",
            },
        ),
        migrations.AddField(
            model_name="customer",
            name="tac",
            field=models.ForeignKey(
                blank=True,
                db_column="tac_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="customer_list",
                to="farm.tac",
            ),
        ),
    ]
